﻿#include <iostream>
#include <cstdlib>
#include <time.h>
#include <math.h>
#include <string.h>

using namespace std;


int faktoriyel(int sayi)        //faktöriyel fonksiyonu
{
	int carpim = 1;
	for (int i = 1; i <= sayi; i++)
	{
		if (sayi <= 0) {
			break;
		}
		carpim = carpim * i;
	}
	if (sayi <= 0)
	{
		cout << "tanimsiz" << endl;
		return 0;
	}
	else
	{
		return carpim;
	}

}

int kombinasyon(int n, int r)         //kombinasyon fonksiyonu
{
	int islem;
	cout << "kombinasyon icin sayilari girin buyukten kucuge" << endl;
	cin >> n; cin >> r;
	islem = faktoriyel(n) / (faktoriyel(r) * faktoriyel(n - r));
	return islem;
}


float ust(int a, int b)      //üst alma fonksiyonu
{
	int carpim = 1;
	for (int i = 1; i <= b; i++)
	{
		carpim = carpim * a;
	}
	return carpim;
}

int mesen(int a)          //mesenne sayysy fonksiyonu
{
	if (a <= 0) {
		return 0;
	}
	else a = ust(2, a) - 1;
	return a;
}

bool asalmi(int x)      //asal kontrolü
{
	if (x < 2)
	{
		return false;
	}
	for (int i = 2; i < x; i++)
	{
		if (x % i == 0)
		{
			return false;
		}
	}
	return true;
}

int nAsal(int x) //n. asal sayyyy veren kod
{
	if (x <= 0)
	{
		return 0;
	}
	int sayac = 0;
	for (int i = 2; sayac < x; i++)
	{
		if (asalmi(i))
		{
			sayac++;
			if (sayac == x)
			{
				return i;
			}
		}
	}
}

float mutlakdeger(int a)     //mutlak deger fonksiyonu
{
	if (a == 0)
	{
		return 0;
	}
	if (a < 0)
	{
		a = -1 * a;
		return a;
	}
	else
		return a;
}

void merhaba()              //merhaba yazan void fonksiyonu
{
	cout << "merhaba" << endl;
}

class nokta     //oop ilk ornegimiz x-y de bir nokta 
{
	public:
		int x, y;
		void degerAta()
		{
			int a, b;
			cout << "2 tane deger girin" << endl;
			cin >> a;
			cin >> b;
			x = a;
			y = b;
		}
		void degerGoster()
		{
			cout << x << " " << y;
		}
		bool orijindemi()
		{
			return x == 0 && y == 0;
		}

};

/*eger bir degiskeni bir fonk icinde kullanıp degerini degistirip o degeri mainde gormek istersen bu mantıkla
pointer kullanabilirsin*/
void degerDegistir(int *x)
{	
	*x = 30;
}

void degeriDegistirref(int& ref)
{
	ref = 20;
}

void printArray(int array[], int size)
{
	for (int i = 0; i < size; i++)
	{
		cout << array[i] << " ";
	}
}

void printArrayP(int* p, int size)
{
	for (int i = 0; i < size; i++)
	{
		cout << p[i] << " ";
	}
}

void printArrayConst(const int* p1, const int* p2)
{
	int sayac = 0;
	for (; p1 != p2; p1++)
	{	
		sayac++;
		if (sayac == 5)
		{
			break;
		}
		cout << *(p1+1) << " ";
	}
}

struct Employee
{
	int id;
	string name;
	string department;
};

int main()
{
	
	Employee Employee1 = { 53,"Muhammet HANEDAN","Game Developer" };
	Employee* p1 = &Employee1;
	cout << p1->name;



	
	

	
	
	

	






















	cout << " " << endl;
	cout << "cikmak icin y " << endl;
	string cikis; cin >> cikis;
	if (cikis == "y") {

	}
	if (cikis == "h") {
		return main();
	}

	return 0;


}

/*int a;        //switch-case örnegi
cin >> a;
switch (a)
{
case 1:
	cout << "1 sectin" << endl;
	break;
case 2:
	cout << "2 sectin" << endl;
	break;
default:
	cout << "gecersiz islem" << endl;
	break;
}*/

/*
int dElemansayisi;  //Dizi giris cikisi gosteren kod
	cout<<"diziniz kac elemanlidir ?"<<endl;
	cin>>dElemansayisi;
	int d[dElemansayisi];
	if(dElemansayisi<0)
	{
		cout<<"eleman sayisi 0 dan kucuk olamaz"<<endl;
	}
	else
	{
		for(int i=0;i<dElemansayisi;i++)
		{
			cout<<i+1<<". degeri giriniz"<<endl;
			cin>>d[i];
		}
		for(int i=0;i<dElemansayisi;i++)
		{
			cout<<i+1<<". deger = "<<d[i]<<endl;

		}
	}
*/
//random number generator örne?i
/*  int rg;
	srand (time(NULL));
	rg=rand();

	cout<<rand();*/

	/*int sayac=1;//ilk 20 asal sayiyi veren kod
		for(int i=2;i<1000;i++){
			if (asalmi(i)){
				sayac++;
				cout<<i<<",";
				if(sayac==21){
					break;
				}
			}

		}
	int sayac=1;                       //ilk 20 mersenne sayysyny veren kod
		for(int i=1;i<=ust(2,20)-1;i++){
			if(sayac>=21){
				break;
			}
			cout<<mesen(i)<<", ";
			sayac++;
		}*/

		/*int sayac=1;                 //asal ve mersenne 5 tanesini yapalym
		for(int i=2;i<ust(2,20);i++){
			if(sayac==6){
				break;
			}
			if(asalmi(mesen(i))){
				cout<<mesen(i)<<",";
			}
			sayac++;
		}*/

		// asal ve mersenne ilk 6
		/*int sayac=1;
		for(int i=1;i<=ust(2,20)-1;i++)
		{   if(sayac==7){
			break;
		}
			if(asalmi(mesen(i)))
			{
				cout<<mesen(i)<<",";
				sayac++;
			}

		}*/

		//Verilen bir dizideki en büyük 3 sayynyn toplamyny döndüren kodu yazynyz.
		/*int iAdizisiElemanSayisi;
		cin>>iAdizisiElemanSayisi;
		int iAdizisi[iAdizisiElemanSayisi];
		if(iAdizisiElemanSayisi<0)
		{
			cout<<"tanimsizdir"<<endl;
		}
		else
		{
			for(int i=0;i<iAdizisiElemanSayisi;i++)
			{
				cin>>iAdizisi[i];
			}
			int iEnbuyukbir=0;
			int iEnbuyukiki=0;
			int iEnbuyukuc=0;
			for(int j=0;j<iAdizisiElemanSayisi;j++)
			{
				if(iEnbuyukbir<iAdizisi[j])
				{
					iEnbuyukuc=iEnbuyukiki;
					iEnbuyukiki=iEnbuyukbir;
					iEnbuyukbir=iAdizisi[j];
				}
				else if(iEnbuyukiki<iAdizisi[j])
				{
					iEnbuyukuc=iEnbuyukiki;
					iEnbuyukiki=iAdizisi[j];
				}
				else if(iEnbuyukuc<iAdizisi[j])
				{
					iEnbuyukuc=iAdizisi[j];
				}

			}
			cout<<iEnbuyukbir<<","<<iEnbuyukiki<<","<<iEnbuyukuc;

		}*/

		//verilen dizi öbür dizinin alt elemanýmý bakan kod
		/*int a[3]={1,2,3};
		int b[7]={4,7,3,1,5,3,9};
		bool durakiki;
		int durak;
		for(int i=0;i<3;i++)
		{
			if(durakiki)
			{
				break;
			}
			for(int j=0;j<7;j++)
			{
				if(a[0]==b[j])
				{
				durak=j;
				durakiki=true;
				break;
				}
			}
		}
		if(a[1]==b[durak+1] && a[2]==b[durak+2])
		{
			cout<<"a dizisi b dizisinin "<<durak<<". elemandan itibaren alt dizisidir"<<endl;
		}
		else
		{
			cout<<"a dizisi b dizisin alt dizisi degildir."<<endl;
		}*/

		/*// 2 oyuncu zar atýcak.Ýlk kaç tane zar atýlacak girilecek.Sonrasýnda her turda kim
		// daha yüksek atmýþsa o sayý alýcak
		int tur;
		srand (time(NULL));
		// rand()%6+1;
		cout<<"kac defa tane zar atilacak"<<endl;
		cin>>tur;
		int zarbir;
		int zariki;
		int skor;
		for(int i=0;i<tur;i++)
		{
			zarbir=rand()%6+1;
			zariki=rand()%6+1;
			if(zarbir>zariki)
			{
				skor++;
			}
			else if(zarbir<zariki)
			{
				skor--;
			}
			cout<<zarbir<<" ";
		}
		cout<<""<<endl;
		for(int i=0;i<tur;i++)
		{
			cout<<zariki<<" ";
		}
		cout<<""<<endl;
		if(skor>0)
		{
			cout<<"ilk atici kazandi"<<endl;
		}
		else if(skor<0)
		{
			cout<<"ikinci atici kazandi"<<endl;
		}
		else
			cout<<"berabere"<<endl;*/

			// 2 oyuncu zar atýcak.Ýlk kaç tane zar atýlacak girilecek.Sonrasýnda her turda kim
		// daha yüksek atmýþsa o sayý alýcak

		/*int tur;
		srand (time(NULL));
		//zarbir=rand()%6+1;
		//zariki=rand()%6+1;
		cout<<"kac defa tane zar atilacak"<<endl;
		cin>>tur;
		int zarbir;
		int zariki;
		int skor=0;
		string z;
		//simdi ilk oyuncuya zar atýn diyilecek bir tusa basýcak ve zar atýcak oyle ilerlicek.
		for(int i=0;i<tur;i++)
		{
			cout<<"1. oyuncu zar atmak icin z basin"<<endl;
			cin>>z;
			if(z!="z")
			{
				break;
			}
			else
			{
				zarbir=rand()%6+1;
				cout<<"1. oyuncu zar degeri = "<<zarbir<<endl;
			}
			cout<<"2. oyuncu zar atmak icin z basin"<<endl;
			cin>>z;
			if(z!="z")
			{
				break;
			}
			else
			{
				zariki=rand()%6+1;
				cout<<"2. oyuncu zar degeri = "<<zariki<<endl;
			}
			if(zarbir>zariki)
			{
				skor++;
				cout<<"1. oyuncu turu kazandi"<<endl;
			}
			else if(zarbir<zariki)
			{
				skor--;
				cout<<"2. oyuncu turu kazandi"<<endl;
			}
		}
		cout<<" "<<endl;
		if(skor>0)
		{
			cout<<"1. oyuncu kazandi";
		}
		else if(skor<0)
		{
			cout<<"2. oyuncu kazandi";
		}
		else
		{
			cout<<"durum beraberedir";
		}*/

		/*Ýki boyutlu bir matris'in transpozunu alan kodu yazýnýz
		 . (Transpoz: Matematikte özellikle de doðrusal cebirde
		  (linear algebra) bir matrisin satýr ve sütunlarýnýn yer
		   deðiþtirmesi anlamýný taþýr.)
		int satir,sutun;
		cin>>satir;
		cin>>sutun;
		int a[satir][sutun];
		for(int i=0;i<satir;i++)
		{
			for(int j=0;j<sutun;j++)
			{
				cout<<i+1<<". satir "<<j+1<<". sutun elemani girin"<<endl;
				cin>>a[i][j];
			}
		}
		cout<<""<<endl;
		for(int i=0;i<satir;i++)
		{
			for(int j=0;j<sutun;j++)
			{
				cout<<a[i][j]<<" ";
			}
			cout<<""<<endl;
		}*/

		/*Ýki boyutlu bir matris'in transpozunu alan kodu yazýnýz
		 . (Transpoz: Matematikte özellikle de doðrusal cebirde
		  (linear algebra) bir matrisin satýr ve sütunlarýnýn yer
		   deðiþtirmesi anlamýný taþýr.)*/

		   /*int satir,sutun;
		   cin>>satir;
		   cin>>sutun;
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<i+1<<". satir "<<j+1<<". sutun elemani girin"<<endl;
				   cin>>a[i][j];
			   }
		   }
		   cout<<""<<endl;
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<a[i][j]<<" ";
			   }
			   cout<<""<<endl;
		   }
		   cout<<""<<endl;
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<a[j][i]<<" ";
			   }
			   cout<<""<<endl;
		   }*/

		   // ayný boyutta iki matrisi toplayan kod satýrý
		   /*int satir,sutun;
		   cin>>satir;
		   cin>>sutun;
		   int a[satir][sutun];
		   int b[satir][sutun];
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<i+1<<". satir "<<j+1<<". sutun elemani girin"<<endl;
				   cin>>a[i][j];
			   }
		   }
		   cout<<""<<endl;
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<a[i][j]<<" ";
			   }
			   cout<<""<<endl;
		   }
		   cout<<""<<endl;
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<i+1<<". satir "<<j+1<<". sutun elemani girin"<<endl;
				   cin>>b[i][j];
			   }
		   }
		   cout<<""<<endl;
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<b[i][j]<<" ";
			   }
			   cout<<""<<endl;
		   }
		   cout<<""<<endl;
		   int c[satir][sutun];
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   c[i][j]=a[i][j]+b[i][j];
			   }

		   }
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<c[i][j]<<" ";
			   }
			   cout<<""<<endl;
		   }*/

		   // ayný boyutta iki matrisi toplayan kod satýrý
		   /*int satir,sutun;
		   cin>>satir;
		   cin>>sutun;
		   int a[satir][sutun];
		   int b[satir][sutun];
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<i+1<<". satir "<<j+1<<". sutun elemani girin"<<endl;
				   cin>>a[i][j];
			   }
		   }
		   cout<<""<<endl;
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<a[i][j]<<" ";
			   }
			   cout<<""<<endl;
		   }
		   cout<<""<<endl;
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<i+1<<". satir "<<j+1<<". sutun elemani girin"<<endl;
				   cin>>b[i][j];
			   }
		   }
		   cout<<""<<endl;
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<b[i][j]<<" ";
			   }
			   cout<<""<<endl;
		   }
		   cout<<""<<endl;
		   int c[satir][sutun];
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   c[i][j]=a[i][j]+b[i][j];
			   }

		   }
		   for(int i=0;i<satir;i++)
		   {
			   for(int j=0;j<sutun;j++)
			   {
				   cout<<c[i][j]<<" ";
			   }
			   cout<<""<<endl;
		   }*/

		   /*
		   int a=10;               //pointers ilk örnegimiz
		   int *p;
		   p=&a;
		   cout<<"a = "<<a<<endl;
		   cout<<"&a = "<<&a<<endl;
		   cout<<"p = "<<p<<endl;
		   cout<<"*p = "<<*p<<endl;
		   */
			
			/*int* p;      //malloc ile hafiza ayirma yontemi ornegi
			p = (int*)malloc(sizeof(int) * 6);
			for (int i = 0; i < 6; i++)
			{
				*(p + i) = i;
			}
			for (int i = 0; i < 6; i++)
			{
				cout << *(p + i) << endl;
			}*/
			
/*int a[2] = {5 ,2};    //pointer ornegi
int* p;
p = a;
cout << *p << endl;
cout << *(p + 1) << endl;
cout << p << endl;
cout << p + 1 << endl;

int b = 7;
int* ptr = &b;
cout << *ptr << endl;
cout << ptr << endl;
*ptr = 9;
cout << "b = " << *ptr << endl;*/

/*void degeriDegistirref(int& ref) //reference ornegi
{
	ref = 20;
}

int main()
{
	int a = 50;
	degeriDegistirref(a);
	cout << a << endl;*/

/*void printArray(int array[], int size)  // dizi-fonksiyon ornegi
{
	for (int i = 0; i < size; i++)
	{
		cout << array[i] << " ";
	}
}

void printArrayP(int* p, int size)
{
	for (int i = 0; i < size; i++)
	{
		cout << p[i] << " ";
	}
}

int main()
{
	int a[5] = { 1,2,3,4,5 };
	printArray(a, 5);
	cout << " " << endl;
	printArrayP(a, 5);*/

/*const int i = 23;  //const anahtar kelimesi koyarsan degisken yada diziye degistirilemezler
	i = 54;
	cout << i << endl;
	const int dizi[] = { 1,2,3 };
	dizi[1] = 5;
	cout << dizi[1];*/

/*void printArrayConst(const int* p1, const int* p2) //pointer ve const dizi örnegimiz pointerin gosterdigi 
{                                                    //deger degisemez ama farklı degerleri gösterebilir
	int sayac = 0;
	for (; p1 != p2; p1++)
	{	
		sayac++;
		if (sayac == 5)
		{
			break;
		}
		cout << *(p1+1) << " ";
	}
}

int main()
{
	int array[] = { 10,20,30,40,50,60,70,80,90,100 };
	printArrayConst(array+2, array+7);*/

/*struct Employee     //structure ornegimiz
{
	int id;
	string name;
	string department;
};

int main()
{
	
	Employee Employee1 = { 53,"Muhammet HANEDAN","Game Developer" };
	cout << Employee1.name;*/

/* struct yapısında pointer kullanımını gosteren ornegimiz p1->name; kullanılır p1.name degil
pointer oldugu için

struct Employee      
{
	int id;
	string name;
	string department;
};

int main()
{
	
	Employee Employee1 = { 53,"Muhammet HANEDAN","Game Developer" };
	Employee* p1 = &Employee1;
	cout << p1->name;*/